@model PagedList.IPagedList<RegistroVisitantes.Models.RESERVACION>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "ListReservas";
}

<br />
<br />

<h2>Consulta de Reservas</h2>
@using (Html.BeginForm())
{
    <p>
        Buscar por fecha:
        <input type="date" name="fromDate" id="dt1" value="@string.Format("{0:dd-MM-yyyy}", ViewBag.fromDate)" />
        <input type="date" name="toDate" id="dt2" value="@string.Format("{0:dd-MM-yyyy}", ViewBag.toDate)" />
        <input type="submit" value="Buscar" />
    </p>
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table class="table table-bordered table-striped table-condensed table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().GRUPO)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ENTRA)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SALE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().RESPONSABLE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SOLICITANTE)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.GRUPO)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ENTRA)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SALE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RESPONSABLE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SOLICITANTE)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, Pagina => Url.Action("ListReservas",
        new { Pagina, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))
 
